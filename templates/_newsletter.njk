{% extends "_base.njk" %}

{% set thispage = 'newsletters' %}

{% macro nextprev() %}
	<div class="controls">
		<a{% if adjs[0] %} href="/newsletters/{{ adjs[0] }}"{% endif %}><button class="rel" {{ 'disabled' if not adjs[0] }}><span class="buttonicon" id="flipped">&#x279C;</span><span class="buttontext">Previous</span></button></a>
		<a href="/newsletters/{{ 'random' if (adjs[0] or adjs[1]) else '' }}"><button class="rel" {{ 'disabled' if not (adjs[0] or adjs[1]) }}><span class="buttonicon" id="random"><span class="icon-random"></span></span><span class="buttontext">Random</span></button></a>
		<a{% if adjs[1] %} href="/newsletters/{{ adjs[1] }}"{% endif %}><button class="rel" {{ 'disabled' if not adjs[1] }}><span class="buttonicon">&#x279C;</span><span class="buttontext">Next</span></button></a>
	</div>
{% endmacro %}

{% block pagecontent %}
	{{ nextprev() }}
	<hr class="letter-breaker"/><br/>
	{% if pdf %}
		<div class="pdf-link"><a href="/assets/releases/{{ pdf }}" target="_blank" class="undecorated-link">
			<span class="icon-download" style="font-size:2em;line-height:50%"></span>
			<span style="position:relative;bottom:0.4em">&nbsp;&nbsp;Download PDF</span>
		</a></div>
	{% endif %}
	<h1>{{ pagetitle }}</h1>
	<!--<div id="button-controls"><div id="button-box">
		<span id="left-control-button">&#10094;</span>
		<span id="right-control-button">&#10095;</span>
	</div></div>-->
	<div id="pages-container"><div id="pages">
	{% block coverpage %}<div class="page cover-default" id="cover-page"><img id="cover-logo" src="/assets/transparent_logo.png"/><br/>Manga & Anime<br/>Society, Kharagpur<br/><br/><div id="cover-page-title">{{ pagetitle }}</div></div>{% endblock %}
		{% block article %}
			<div class="faded">This article hasn't been published yet - stay tuned!</div>
		{% endblock %}
	</div></div>
	<script>
		const spoilered = document.querySelectorAll('.spoiler');
		for (let i = 0; i < spoilered.length; i++) {
			const article = spoilered[i];
			article.addEventListener('click', () => {
				if (!article.classList.contains('spoiler')) return;
				article.classList.add('being-removed');
				setTimeout(() => article.classList.remove('spoiler'), 1000);
			});
		}
	</script>
	<br/><div style="width:200px;margin:10px auto;background-color:rgba(255,255,255,0.2);border-radius:5px;padding:10px;color:var(--light-gray);font-size:0.8em;text-align:justify-center">Swipe left/right or click and use arrow keys to scroll<br/>Best viewed on PC</div><hr class="letter-breaker"/><br/>
	{{ nextprev() }}
{% endblock %}

{% block customcss %}
	<link rel="stylesheet" type="text/css" href="/assets/styles/icons.css"/>
	<style>
		div.controls {
			padding: 40px 20px;
			display: flex;
			width: 400px;
			margin: 0px auto;
			justify-content: space-between;
		}
		span.buttontext {
			display: block;
		}
		.buttonicon {
			display: none;
		}
		.letter-breaker {
			width: 420px;
			max-width: 90%;
			margin: auto;
		}
		span#flipped {
			transform: scale(-1);
			filter: flipH;
			-ms-filter: flipH;
		}
		button.rel {
			width: 100px;
			height: 30px;
			background-color: var(--gray);
			color: var(--off-white);
			border: 2px solid var(--ghost-gray);
			border-radius: 5px;
			cursor: pointer;
		}
		button.rel:disabled {
			background-color: var(--tinted-gray);
			border: 1px solid var(--gray);
			color: var(--ghost-gray);
			cursor: default;
		}
		button.rel:not(:disabled):hover {
			background-color: var(--middle-gray);
		}

		#button-controls {
			position: absolute;
			top: 50%;
			display: flex;
			justify-content: center;
			align-items: center;
			width: calc(100vw - 10px);
		}
		#button-box {
			width: 540px;
			max-width: 100%;
			display: flex;
			justify-content: space-between;
			font-size: 2.5em;
		}
		#left-control-button, #right-control-button {
			cursor: pointer;
			transition: transform 0.3s;
		}
		#left-control-button:hover, #right-control-button:hover {
			transform: scale(1.2);
			color: var(--off-white);
		}

		#pages-container {
			overflow: hidden;
			width: 80%;
			height: 100%;
			margin-bottom: 10px;
			position: relative;
			margin: auto;
		}
		#pages {
			display: flex;
			overflow-x: auto;
			scroll-snap-type: x mandatory;
			scroll-behavior: smooth;
			-webkit-overflow-scrolling: touch;
			height: 100%;
			width: 100%;
			-ms-overflow-style: none;
			scrollbar-width: none;
		}
		#pages::-webkit-scrollbar {
			display: none;
		}
		.page {
			scroll-snap-align: start;
			scroll-snap-stop: always;
			flex-shrink: 0;
			width: 100%;
			margin-right: 20px;
			transform-origin: center center;
			transform: scale(1);
			transition: transform 0.8s;
			position: relative;
			display: block;
			justify-content: center;
			align-items: center;
			overflow: hidden;
			background: url(/assets/releases/page.png);
			box-sizing: border-box;
			padding-top: 20px;
			min-height: 645px;
			height: 96vh;
			border: 2px var(--light-pink);
			border-radius: 5px;
			color: var(--abyss);
			page-break-before: always;
		}
		div.cover-default {
			width: 420px;
			max-width: 100%;
			height: 594px;
			margin: 0 calc(50% - 210px);
		}
		.page:not(#cover-page) {
			counter-increment: page;
		}
		.page:not(#cover-page):after {
			content: counter(page) "/{{ pagecount }}";
			position: absolute;
			bottom: 0;
			right: 10px;
			padding: 5px 12px;
			font-size: 12px;
			opacity: 0.5;
			font-family: Ubuntu, Roboto, Arial, Open Sans, sans-serif !important;
			text-shadow: none !important;
		}
		@font-face {
			font-family: 'Cover';
			src: url('/assets/releases/cover-title-font.ttf') format('truetype');
		}
		#cover-page {
			background-color: var(--red);
			background-image: none;
			scroll-snap-align: center;
			font-size: 2em;
			font-weight: bold;
			font-family: Cover;
			text-shadow: -3px 0 var(--white), 0 3px var(--white), 3px 0 var(--white), 0 -3px var(--white);
		}
		#cover-logo {
			width: 70%;
		}
		#cover-page-title {
			font-size: 1.2em;
		}

		.article-full, .article-half {
			width: 90%;
			margin: auto;
			overflow-y: scroll;
			display: block;
			padding-right: 10px;
			scrollbar-color: var(--red) var(--off-white);
		}
		.article-full {
			max-height: 95%;
			min-height: 90%;
		}
		.article-half {
			max-height: 40%;
			min-height: 40%;
		}
		.article-full > h2, .article-half > h2, .article-header {
			opacity: 0.99;
			text-shadow: 0 0 3px var(--red);
			font-weight: bold;
		}
		.article-header {
			font-size: 1.5em;
		}
		.article-content {
			text-align: justify;
		}
		.article-content > p {
			margin-top: 5px;
			margin-bottom: 20px;
		}
		.article-content > small {
			text-align: center;
			font-size: 0.7em;
			width: 100%;
			display: inline-block;
		}
		.article-author {
			font-size: 0.8em;
		}
		.anime-info {
			font-size: 0.7em;
			border: 1px solid var(--darker-gray);
			text-align: left;
			margin: 20px auto;
		}
		.anime-info > tbody > tr > td {
			padding: 2px 10px;
		}
		.article-end {
			{# background-color: var(--red); #}
			-webkit-background-image: url(/assets/releases/divider.svg);
			background-image: url(/assets/releases/divider.svg);
			height: 80px;
			width: 270px;
			background-position: center;
			background-size: cover;
			background-repeat: no-repeat;
			margin: auto;
		}
		.anime-ratings {
			margin: auto;
			font-size: 0.8em
		}
		.anime-ratings > tbody > tr > td {
			width: 50%;
		}
		.anime-ratings > tbody > tr > td:nth-child(1) {
			text-align: right;
			padding-right: 5px
		}

		.spoiler {
			position: relative;
			display: inline-block;
			cursor: help;
		}
		.page .spoiler h2 {
			position: fixed;
			margin: auto;
			max-width: calc(100% - 48px);
		}
		.spoiler::before {
			content: 'Major spoilers ahead! Click to reveal';
			position: absolute;
			left: 0;
			top: 0;
			right: 0;
			height: 100%;
			border-radius: 1px;
			font-size: 3em;
			font-weight: bold;
			color: var(--middle-gray);
			background: var(--off-white);
			text-align: center;
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 1;
			position: fixed;
			transition: opacity 1.0s, transform 0.3s;
		}
		.being-removed:before {
			transform: translateY(-50%) rotateX(80deg);
			opacity: 0.6;
			transition: opacity 0.8s linear, transform 0.8s linear;
		}

		@media (max-width: 500px) {
			div.controls {
				width: 200px;
			}
			span.buttontext {
				display: none;
			}
			.buttonicon {
				display: block;
			}
			button.rel {
				width: 50px;
			}
			#pages-container {
				padding-left: 0;
				padding-right: 0;
				width: 100%;
			}
		}

		.pdf-link {
			padding: 20px 20px 15px;
			display: inline-block;
			border: 1px solid var(--off-white);
			border-radius: 5px;
			margin-bottom: 20px;
		}
	</style>
	{% block lettercss %}{% endblock %}
{% endblock %}

{% block customjs %}
	<script>
		axios.defaults.withCredentials = true;
		axios.defaults.headers.common['X-CSRF-TOKEN'] = '{{ csrfToken }}';
	</script>
	{% block letterjs %}{% endblock %}
{% endblock %}
