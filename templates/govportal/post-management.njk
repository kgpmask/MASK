{% extends "govportal/govportal.njk" %}

{% set thispage = 'govportal' %}
{% set pagetitle = 'Governor Portal | Post Management' %}
{% set actionname = 'Post Management' %}

{% set scripts = ['https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js'] %}

{% block actioncontent %}
<div class="message hidden"></div>
<div class="container">
	<h1>post management page</h1>
	{% for post in posts %}
	<div class = "card">
				<div>{{post.name}}</div>
				<div>{{post.type}}</div>
				<div>{{post.link}}</div>
				<div>{{post.attr}}</div>
				<button class = "editP" onclick= "editPost('{{post.link}}')" >Edit</button>
				<button class = "deleteP" onclick = "deletePost('{{post.link}}')">Delete</button>
	</div>
	{% endfor %}
</div>
{% endblock %}

{% block customcss %}
	<style>
		.card {
		margin: 15px 0px 0px 10px;
		}
		.editP,.deleteP {
			align-self: center;
			margin: 1% 0% 2% 0%;
			width: fit-content;
			background-color: var(--red);
			color: white;
			border-radius: 12px;
			cursor: pointer;
			padding: 1% 2% 1% 2%;
		}
		.message {
			position: absolute;
			top: 0;
			right: calc(50vw - 220px);
			padding: 20px;
			z-index: 1;
			color: #fff;
			font-weight: 600;
			font-size: 18px;
			width: 400px;
			transform-origin: top;
			transition: transform 0.3s ease;
			border-bottom-left-radius: 6px;
			border-bottom-right-radius: 6px;
		}
		.error {
			background-color: rgba(255, 51, 51, 0.85);
		}
		.success {
			background-color: rgba(75, 189, 67, 0.85);
		}
		.hidden {
			transform: scaleY(0);
		}
		.container{
			display: flex;
			flex-direction: column;
			
			transform: 0.3s;
		}
</style>
{% endblock %}

{% block customjs %}
	<script>
		axios.defaults.withCredentials = true;
		axios.defaults.headers.common['X-CSRF-TOKEN'] = '{{ csrfToken }}';

        async function postData (data) {
			//console.log(data);
			var res = (await axios.post('/gov-portal/post-management', { data: data })).data;
			const e = document.getElementsByClassName('message')[0];
			e.innerHTML = res.message;
			e.classList.add(res.success ? 'success' : 'error');
			e.classList.remove('hidden');
			setTimeout(function () {e.classList.add('hidden')}, 2000);
			if (res.success) {
				setTimeout(function () { location.reload() }, 3000);
			}
		}
		function editPost(link) {
				const data = { functionType: 'editPost' , link: `${link}` };
				postData(data);
			
		}
		function deletePost(link) {
			console.log(link);
			if(confirm("Are you sure you want to delete the post?")) {
				const data = { functionType: 'deletePost' , link: `${link}` };
				postData(data);
			}
		}
		window.onload = () => {
			if (!axios.defaults.headers.common['X-CSRF-TOKEN']) axios.defaults.headers.common['X-CSRF-TOKEN'] = document.cookie.split('=')[1];
		}

		
	</script>
{% endblock %}
