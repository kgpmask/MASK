{% extends '_newsletter.njk' %}

{% set pagetitle = 'October - Issue 2' %}
{% set pagedesc = 'Unleash your inner sleuth with MASKâ€™s second Issue of the October newsletter and its spine-chilling reviews and mind-bending mystery crosswords.' %}

{# {% set pagecount = 6 %} #}

{% block coverpage %}
	<div class="page cover-default" id="cover-page">
		<img id="cover-logo" src="/assets/transparent_logo.png"/>
		<br/>Manga And Anime<br/>Society Kharagpur<br/>
		<br/>
		<div id="cover-page-title">{{ pagetitle }}</div>
	</div>
{% endblock %}

{# {% block nullcoverpage %}
	<div class="page" id="cover-page"></div>
{% endblock %} #}

{% set nullpdf = '2021-10-2/issue.pdf' %}

{% block prescript %}
	<script>
		'use strict';
		const crossMatrix
		const wordMatrix = `K A U K H Q Z N S H I N Y A X
O R L E N U K L Q P B Q Z X H
J I I I C A R L E Y K B I V J
I T K T K Y C C E S O K A B E
I S U A A S O U D O U G L A S
Z U Y K I K O N A K A N O K S
U P A E T W X Z M E N T N S A
M X S S O B Y U T O S A K I T
I U E H E R I K O O Y X T P O
S A L I B H Q S F V U K V L T`.replace(/\t/g, '').split('\n').map(line => line.split(' '));
		const letterSpaces = [];
		const tempWords = `CARLEY\nDOUGLAS\nERIKO\nIKUYA\nIZUMI\nKAITO\nKEI\nKOJI\nKONAKANO\nRITSU\nSATO\nSHINYA\nSOKABE\nTAKESHI\nYUTOSAKI\n`.split('\n').map(word => word.replace(/\t/g, '')), words = tempWords.map(word => word.replace(/[ -]/g, '').toUpperCase());
		(() => {
			const maxDimension = Math.max(crossMatrix.length, crossMatrix[0].length);
			const root = document.querySelector(':root');
			root.style.setProperty('--crossword-cell-size', (40 * 10 / maxDimension - 4) + 'px');
			root.style.setProperty('--crossword-font-size', (10 / maxDimension) ** (1 / 2) + 'em');
			crossMatrix.forEach((row, i) => {
				row.forEach((char, j) => {
					if (char === ' ') letterSpaces.push([i, j]);
				});
			});
			root.style.setProperty('--wordsearch-padding', (100 * wordMatrix.length / wordMatrix[0].length) + '%');
			root.style.setProperty('--wordsearch-cell-height', (100 / wordMatrix.length) + '%');
			root.style.setProperty('--wordsearch-cell-width', (100 / wordMatrix[0].length) + '%');
		})();
	</script>
{% endblock %}

{% block cluejs %}
	<script>
		function startClues() {
			new IntersectionObserver(([crossword]) => {
				if (crossword.isIntersecting && crossword.intersectionRatio > 0.8) {
					crosswordVis = true;
				} else {
					crosswordVis = false;
				}
			}, { threshold: [0.99] }).observe(document.getElementById('crossword-table'));
			const clues = [];
			clues.push(`3. Don's age (3)
			5. One of Norman's most loyal comrades (7)
			7. Thoma's age (5)
			8. Person who left some Morse Code (7)
			9. Conny's age at the time of her shipping (3)
			10. Isabella's eye colour (6)`.replace(/\t/g, '').split('\n').map(line => line.split(/\. (.*)/)));
			clues.push(`1. Name of the House (10)
			2. Human body part that demons eat (5)
			4. Character who saved Ray from burning (4)
			6. Body part with tracking devices (3)
			7. Demon who saved Ray (5)
			11. Isabella's child (3)`.replace(/\t/g, '').split('\n').map(line => line.split(/\. (.*)/)));
			document.getElementById('crossword-left').innerHTML = `<h3>Across</h3><br/><table class="cross-words">${clues[0].map(clue => `<tr><td>${clue[0]}</td><td>${clue[1]}</td></tr>`).join('')}</table>`;
			document.getElementById('crossword-right').innerHTML = `<h3>Down</h3><br/><table class="cross-words">${clues[1].map(clue => `<tr><td>${clue[0]}</td><td>${clue[1]}</td></tr>`).join('')}</table>`;
		}
	</script>
	<script>
		window.onload = () => {
			startWord();
			startCross();
			startClues();
		}
	</script>
{% endblock %}

{% block lettercss %}
	<style>
		:root {
			--black-blue   : #121920;
			--dark-blue    : #112f3f;
			--teal         : #006280;
			--dirty-green  : #4d5843;
			--dirty-yellow : #a98135;
		}
		.page {
			color: var(--dark-blue);
		}
		/*#cover-page {
			background-image: url(/assets/releases/2021-10-2/cover.webp);
			background-position: center;
			background-size: contain;
			background-repeat: no-repeat;
			background-color: rgba(0, 0, 0, 0) !important;
		}*/
		.article-full, .article-half, #crossword-left, #crossword-right {
			scrollbar-color: var(--teal) var(--off-white) !important;
		}
		.article-full > h2, .article-half > h2, .article-header {
			text-shadow: 0 0 2px var(--teal) !important;
		}
		{# .article-end {
			background-color: var(--dirty-green);
		} #}
		.wordsearchCellS {
			background-color: var(--dirty-yellow) !important;
		}
		.found-word {
			color: var(--teal) !important;
		}
		.wordsearch-complete {
			color: var(--teal) !important;
		}
		.spoiler:before {
			color: var(--teal);
			background: var(--dirty-yellow);
		}
	</style>
	<link rel="stylesheet" type="text/css" href="/assets/styles/wordsearch.css"/>
	<link rel="stylesheet" type="text/css" href="/assets/styles/crossword.css"/>
{% endblock %}
