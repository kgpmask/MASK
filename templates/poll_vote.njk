{% extends '_base.njk' %}

{% set thispage = 'polls' %}
{% set pagetitle = 'Poll:' + poll.title %}

{% block pagecontent %}
	<div class="message hidden"></div>
	<div>
		<h1> {{ poll.title }} </h1>
		<div class="poll-container">
			<div class="poll">
				<h3> Choose one of the following (or make your own choice) </h3>
				<br>
				<div>Click here to see the <a href="/polls/results/{{ poll._id }}" style="color: var(--dark-red); font-weight: 600;">current poll results</a></div>
				<br>
				<div class="choice-container">
					{% for choice in poll.records %}
						<div class="choice">
							<input type="radio" name="poll-value" value="{{ choice._id }}" id="{{ choice._id }}" {{ 'checked' if votedFor === choice.value else '' }}>
							<label for="{{ choice._id }}">{{ choice.value }}</label>
						</div>
					{% endfor %}
					<div class="choice make-choice">
						<input type="radio" name="poll-value" value="null" id="null">
						<label for="null"><input type="text" onclick="document.querySelector('#null').checked = true" placeholder="Enter your own choice" required></label>
					</div>
				</div>
				<br>
				<button type="button" onclick="submitVote()"> Submit </button>
			</div>
		</div>
	</div>
{% endblock %}

{% set scripts = ['https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js'] %}

{% block customjs %}
	<script>
			axios.defaults.withCredentials = true;
			axios.defaults.headers.common['X-CSRF-TOKEN'] = '{{ csrfToken }}';
		</script>
	<script>
		async function submitVote () {
			const pollId = '{{ poll._id }}'
			const id = [...document.querySelectorAll('input[name="poll-value"]')].filter(inp => inp.checked)[0]?.id;
			const userChoice = document.querySelector(`label[for="${id}"]`).firstChild?.value?.trim() ?? document.querySelector(`label[for="${id}"]`).innerText;
			{# console.log(userChoice); #}
			const response = (await axios.post('/polls/', { pollId, userChoice })).data;
			const e = document.getElementsByClassName('message')[0];
			e.innerHTML = response.message;
			e.classList.add(response.success ? 'success' : 'error');
			e.classList.remove('hidden');
			setTimeout(function () {e.classList.add('hidden')}, 2000);
			if (response.success) {
				setTimeout(function () {
					window.location.href  = "/polls/results?id={{ poll._id }}";
				}, 3000);
			}
		}
	</script>
{% endblock %}

{% block customcss %}
	<style>
		.message {
			position: absolute;
			top: 0;
			right: calc(50vw - 220px);
			padding: 20px;
			z-index: 1;
			color: #fff;
			font-weight: 600;
			font-size: 18px;
			width: 400px;
			transform-origin: top;
			transition: transform 0.3s ease;
			border-bottom-left-radius: 6px;
			border-bottom-right-radius: 6px;
		}
		.error {
			background-color: rgba(255, 51, 51, 0.85);
		}
		.success {
			background-color: rgba(75, 189, 67, 0.85);
		}
		.hidden {
			transform: scaleY(0);
		}
		.poll-container{
			padding: 23px 25px;
			display: flex;
			flex-direction: column;
			align-items: center;
			margin: 5vh 0;
		}

		.poll {
			display: flex;
			flex-direction: column;
			margin: 0 5%;
			border-radius: 10px;
			padding: 40px 5%;
			width: calc(min(720px, 80vw));
			background-color: rgba(50, 50, 50, 0.5);
			border: 2px solid rgba(255,255,255,0.1);
			backdrop-filter: blur(5px);
		}
		.poll *{
			outline: none;
			border: none;
		}
		.choice-container{
			display: flex;
			flex-direction: column;
			justify-content: center;
		}
		.choice > label {
			display: block;
			font-size: 18px;
			position: relative;
			{# top: -38px; #}
			transition: all 0.5s ease;
			width: 100%;
			border: 2px solid var(--light-gray);
			border-radius: 6px;
    		padding: 10px;
			width: -moz-available;
			width: -webkit-fill-available;
			{# height: 50px; #}
			color: var(--off-white);
			background-image: linear-gradient(to right, var(--red) 50%, transparent 50%);
			background-size: 200% 200%;
			background-position: right;
			transition: all 0.4s ease;
			font-weight: 600;
		}
		.choice > input[type='radio'] {
			appearance: none;
		}

		.choice > input[type='radio']:checked ~ label{
			color: var(--white);
			background-position: left;
			font-weight: 600;
		}
		.make-choice > label > input {
			background-color: transparent;
			font-size: 0.83em;
			font-weight: 600;
			text-align: center;
			color: var(--light-gray);
			width: 100%;
		}
		.make-choice > input[type='radio']:checked ~ label > input{
			color: var(--white);
		}
		.make-choice > input[type='radio']:checked ~ label > input::placeholder{
			opacity: 0;
		}
		.make-choice > input[type='radio'] ~ label > input::placeholder{
			color: var(--light-gray);
		}
		.poll > button {
			margin: auto;
			width: calc(min(250px, 40vw));
			border-radius: 12px;
			padding: 12px;
			background-color: var(--red);
			color: var(--abyss);
			font-size: 106%;
		}
	</style>
{% endblock %}
